-- 조건문과 비교 연산자 --

fun main(){
    var a = 7
    if (a > 10){
        println("a is bigger than 10")
    }else {
        println("a is less than 10")
    }
    doWhen("Jay")
}
// 다중 조건문인 when은 다른 언어의 switch 문을 좀 더 편리하게 바꾼 기능이다.
// if는 하나의 변수랑만 비교할 수 있지만 when은 여러 변수와 비교 가능하다.
fun doWhen(a : Any){ //Any 자료형은 Kotlin의 최상위 자료형으로 어떤 자료형이 와도 상관 없다.  
    when(a){
        // 반환이 없는 동작의 경우
        1 -> println("Integer 1")
        "Jay" -> println("Jay's Practice")
        is Long -> print("type Long")
        is String -> println("type String")
        // else -> println("nothing") 아무 것도 성립하지 않을 때. 무조건 마지막 줄에 넣어야 한다. 이후에 조건이 다시나오면 에러가 난다.
        // 반환이 있는 경우는 바로 값을 써주면 된다.
        1 -> "Integer 1"
        "Jay" -> "Jay's Practice"
    }
// 여러개의 조건이 성립해도 먼저 참인 경우만 호출된다.
// switch에서 break를 써주는 것처럼 어떤 조건이 참인 순간 나머지를 읽지 않는다고 보면 된다.     
}